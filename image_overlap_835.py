#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct 27 11:22:53 2022

@author: josephbriggs
"""

from typing import List

class Solution:
    def largestOverlap(self, img1: List[List[int]], img2: List[List[int]]) -> int:
        
        # image processing libraries have convolutions built into them. A 2d
        # convolution implemented with the fast fourier transform has an 
        # efficiency of n^2 log n. This is not trivial to implement, so an 
        # O(n^4) is provided.
        
        
        n = len(img1)
        kernel = self.translate_img(img1,1,0)
        max_total = 0
        theoretical_max = min(self.compare_imgs(img1,img1),self.compare_imgs(img2,img2) )
        
        for i in range(-n+1,n):
            for j in range(-n+1,n):
                total = self.translate_img_and_compare(img1,i,j,img2)
                if total > max_total: max_total = total
                if total == theoretical_max:
                    return max_total
        
        return max_total
    
    def compare_imgs(self,img1,img2):
        n = len(img1)
        total = 0
        for i in range(n):
            for j in range(n):
                total += img1[i][j] & img2[i][j]
        return total
                 
    
    def translate_img_and_compare(self,img,x_shift,y_shift,img2):
        n = len(img)
        kernel = [ [0 for i in range(2*n)] for j in range(2*n)]
        
        for i in range(n):
            for j in range(n):
                kernel[j+y_shift][i+x_shift] = img[j][i]
        
        
        total = 0
        for i in range(n):
            for j in range(n):
                # kernel_2[j][i] = kernel[j][i]        
                total += kernel[i][j] & img2[i][j]
        return total
    
    
    
img1 = [[1,1,0],[0,1,0],[0,1,0]]
img2 = [[0,0,0],[0,1,1],[0,0,1]]

sln = Solution()
assert sln.largestOverlap(img1, img2) == 3


img1 = [[0,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1],[1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,1,0,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,0,0,1],[1,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1],[1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,0],[1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1],[0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1],[1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,1,0,1,1,0,1,1],[0,0,1,0,0,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0],[1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,1],[1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1],[1,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1],[0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1],[0,1,0,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0],[0,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1],[0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1],[0,1,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1],[1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1],[0,1,0,0,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1],[0,1,1,0,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1],[1,0,1,1,0,1,1,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1],[0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0],[1,0,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1]]
img2 = [[1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1],[0,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1],[1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0],[1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1],[1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,0,0,0,1,1,0,1,0,1,1],[0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,0],[0,1,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,1,1,0,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1],[1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,0,1,0,1,1,1,1,0,1],[1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0],[1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1],[1,1,0,0,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,1,1,0,1,1,0],[0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1],[0,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,1,1,1],[1,1,1,1,0,1,1,0,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1],[1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0],[1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,1,0,1,0,1,1,1,0,1],[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1],[1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1],[0,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1],[1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1],[1,1,0,1,1,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1]]
sln.largestOverlap(img1, img2)
